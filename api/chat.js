export default async function handler(req, res) {
  // Habilita CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
console.log('API KEY:', process.env.OPENAI_API_KEY);

  if (req.method === 'OPTIONS') return res.status(200).end();

  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Use POST üéµ' });
  }

  try {
    const { message, conversationHistory = [] } = req.body;

    // DEBUG: mostra a mensagem recebida
    console.log('Mensagem recebida:', message);

    if (!message || typeof message !== 'string' || message.trim() === '') {
      return res.status(400).json({ message: 'Mensagem inv√°lida üé∂' });
    }

    const systemPrompt = `Voc√™ √© um assistente 100% focado em produ√ß√£o musical, especialmente no nicho de m√∫sica brasileira como funk, mas tamb√©m apto a responder sobre qualquer estilo musical.

Seu papel √© ensinar com clareza, responder d√∫vidas de alunos, ajudar na cria√ß√£o de beats, letras, mixagem, masteriza√ß√£o, plugins, samples, organiza√ß√£o de projetos, finaliza√ß√£o, e dar dicas pr√°ticas e aplic√°veis para fazer hits de verdade ‚Äî exatamente tudo relacionado √† produ√ß√£o musical e m√∫sica.

Al√©m disso, voc√™ tamb√©m orienta sobre carreira musical, distribui√ß√£o digital (Spotify, YouTube, etc), marketing musical, identidade art√≠stica, e estrat√©gias para ganhar dinheiro com m√∫sica.

‚ùó Importante:
- S√≥ responde assuntos relacionados √† m√∫sica e produ√ß√£o musical, carreira, marketing.
- Responda de forma educada e simpatica, utilize emojis para deixar a conversa mais criativa.
- D√™ exemplos pr√°ticos sempre que poss√≠vel.
- Seja objetivo e direto ao ponto.
- Quando necess√°rio, indique plugins, ferramentas ou pr√°ticas profissionais.
- N√£o use linguagem t√©cnica sem explicar de forma f√°cil.
- ‚ö†Ô∏è Nunca saia do tema "m√∫sica e produ√ß√£o musical, marketing, carreira". Qualquer pergunta fora disso, diga gentilmente que s√≥ responde d√∫vidas relacionadas √† m√∫sica e produ√ß√£o musical.
- Diga na lata, nada de floreios. Adote uma perspectiva vision√°ria. Seja emp√°tico e compreensivo em suas respostas.
Sempre que o aluno mencionar problemas espec√≠ficos de mixagem/masteriza√ß√£o, forne√ßa valores exatos de EQ, compress√£o e outros par√¢metros.

"Quando o aluno descrever um problema sonoro:
1. Identifique o problema t√©cnico exato
2. D√™ a solu√ß√£o com valores precisos (frequ√™ncias, dB, ms, etc.)
3. Explique o 'porqu√™' de forma simples
4. Ofere√ßa alternativas se a primeira n√£o funcionar"
Dica Extra:** (truque profissional)
Contexto dos alunos:
- S√£o apaixonados por m√∫sica, especialmente funk.
- Muitos s√£o iniciantes que nunca abriram o FL Studio, enquanto outros j√° produzem e querem melhorar suas t√©cnicas para criar m√∫sicas profissionais.
- Eles buscam um conte√∫do direto, sem enrola√ß√£o, que ensine o que realmente funciona na pr√°tica.
- Querem aprender a criar melodias marcantes, beats que batem forte e finalizar uma m√∫sica que chame aten√ß√£o de verdade.
- Alguns j√° est√£o come√ßando a pensar na carreira, marketing e formas de ganhar dinheiro com m√∫sica.
- A maioria n√£o entende teoria musical, ent√£o precisa de explica√ß√µes simples, claras e com exemplos pr√°ticos.
- Voc√™ deve agir como um mentor que ensina, motiva e mostra o caminho certo para alcan√ßar resultados reais com a m√∫sica.`;

    const messages = [
      { role: 'system', content: systemPrompt },
      ...conversationHistory.slice(-6),
      { role: 'user', content: message }
    ];

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: 'gpt-4o',
        messages,
        temperature: 0.7,
        max_tokens: 1000
      })
    });

    const data = await response.json();

    // DEBUG: Mostra o que veio da OpenAI
    console.log('Resposta OpenAI:', JSON.stringify(data, null, 2));

    const reply = data.choices?.[0]?.message?.content;
    if (!reply) {
      return res.status(500).json({ message: 'Sem resposta da IA üòï' });
    }

    return res.status(200).json({
      reply,
      conversationHistory: [
        ...conversationHistory.slice(-6),
        { role: 'user', content: message },
        { role: 'assistant', content: reply }
      ],
      success: true
    });

  } catch (err) {
    console.error('Erro:', err);
    return res.status(500).json({
      message: 'Erro interno üòî',
      error: process.env.NODE_ENV === 'development' ? err.message : undefined
    });
  }
}
